<xml xmlns="https://developers.google.com/blockly/xml"><block type="pxt-on-start" id="AWhV?OT#Pdvq]g,OOC]t" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="zsK{oQo82~6}cT~Ol/+i" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace wifi {" line1="    let port = '2000'" line2="    //% block=&quot;Connexion au point d'accès SSID $SSID mot de passe $password adresse IP $adresse_IP &quot;" line3="    //% group='Commun'" line4="    //% SSID.defl='SNT1' password.defl='12345678'" line5="    //% adresse_IP.defl='192.168.0.5'" line6="    export function connect_AP_IP(SSID: string, password: string, adresse_IP: string): void {" line7="        basic.showIcon(IconNames.Asleep)" line8="        basic.pause(2000)" line9="        serial.setRxBufferSize(100)" line10="        serial.setTxBufferSize(100)" line11="        serial.redirect(" line12="        SerialPin.P14," line13="        SerialPin.P0," line14="        BaudRate.BaudRate115200" line15="        )" line16="        basic.pause(2000)" line17="        basic.showIcon(IconNames.SmallSquare)" line18="        serial.writeString(&quot;connect_to_AP,&quot;+SSID+&quot;,&quot;+password)" line19="        basic.pause(2000)" line20="        let reception = &quot;&quot;" line21="        while (reception == &quot;&quot;) {" line22="            serial.writeString(&quot;connected_to_AP?&quot;)" line23="            reception = serial.readUntil(serial.delimiters(Delimiters.Hash))" line24="            if (reception == &quot;connected_to_AP&quot;) { " line25="                basic.pause(500)" line26="                serial.writeString(&quot;set_IP_address_esp32,&quot;+adresse_IP)" line27="                basic.pause(1000)" line28="                basic.showString(&quot;C&quot;)" line29="            }" line30="            else {" line31="                basic.showIcon(IconNames.Square)" line32="                basic.pause(2000)&#9;" line33="            }" line34="        }" line35="    }" line36="    //% block=&quot;Envoi $donnee au serveur adresse IP $adresseIP_serveur&quot;" line37="    //% group='Client'" line38="    //% donnee.defl='essai' adresseIP_serveur.defl=&quot;192.168.0.101&quot;" line39="    export function envoi_donnee_serveur(donnee: string, adresseIP_serveur: string): void {" line40="        let port2 = &quot;2000&quot;" line41="        serial.writeString(&quot;Connect_server_send,&quot;+adresseIP_serveur+&quot;,&quot;+port2+&quot;,&quot;+donnee)" line42="    }" line43="" line44="    //% block=&quot;Donnee reçue du client&quot;" line45="    //% group='Serveur'" line46="    export function donnee_recue(): string {" line47="        serial.writeString(&quot;Start_read_client,&quot;+port)" line48="        return serial.readUntil(serial.delimiters(Delimiters.Hash));" line49="    }" line50="" line51="    //% block=&quot;Adresse IP client connecté&quot;" line52="    //% group='Serveur'" line53="    export function IPaddress_client_connected(): string {" line54="        serial.writeString(&quot;IPaddress_client_connected?&quot;)" line55="        return serial.readUntil(serial.delimiters(Delimiters.Hash));" line56="    }" line57="" line58="    //% block=&quot;Donnee reçue du serveur&quot;" line59="    //% group='Client'" line60="    export function answer_server(): string {" line61="        serial.writeString(&quot;answer_server&quot;)" line62="        return serial.readUntil(serial.delimiters(Delimiters.Hash));" line63="    }" line64="" line65="    //% block=&quot;Envoi $reponse au client &quot;" line66="    //% group='Serveur'" line67="    //% reponse.defl='reponse'" line68="    export function answer_client_request(reponse: string): void {" line69="        serial.writeString(&quot;answer_client_request,&quot;+reponse)" line70="    }" line71="}" numlines="72"></mutation></block></statement></block></xml>